package ${package.Controller};

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.citysmart.ucenter.common.anno.Log;
import com.citysmart.common.bean.Rest;
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.apache.commons.lang3.StringUtils;

#if(${field.keyFlag})
    #set($keyPropertyName=${field.propertyName})
    #set($keyPropertyType=${field.propertyType})
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Controller
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

@Autowired
public ${table.serviceName} service;

    /**
     * 分页查询
     */
    @RequestMapping("/list/{pageNumber}")
    public  String list(@PathVariable Integer pageNumber,@RequestParam(defaultValue="15") Integer pageSize, String search,Model model){

            Page<${entity}> page = getPage(pageNumber,pageSize);
            model.addAttribute("pageSize", pageSize);
            // 查询分页
            EntityWrapper<${entity}> ew = new EntityWrapper<${entity}>();
            if(StringUtils.isNotBlank(search)){
                model.addAttribute("search",search);
            }
            Page<${entity}> pageData = service.selectPage(page, ew);
            model.addAttribute("pageData", pageData);
            return "#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}/list";
    }

    /**
     * 新增$!{table.comment}
     */
    @RequiresPermissions("add${entity}")
    @RequestMapping("/add")
    public  String add(Model model){
            return "#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}/edit";
    }

    /**
     * 执行新增
     */
    @RequiresPermissions("add${entity}")
    @RequestMapping("/doAdd")
    @ResponseBody
    @Log("新增$!{table.comment}")
    public Rest doAdd(@Valid ${entity} entity,BindingResult result){
        if(result.hasErrors()){
            for (ObjectError error : result.getAllErrors()) {
                return Rest.failure(error.getDefaultMessage());
            }
        }
        service.insert(entity);
        return Rest.ok();
    }
    /**
     * 删除$!{table.comment}
     */
    @RequiresPermissions("delete${entity}")
    @RequestMapping("/delete")
    @ResponseBody
    @Log("删除$!{table.comment}")
    public  Rest delete(Integer id){
            service.deleteById(id);
            return Rest.ok();
    }

    /**
     * 编辑$!{table.comment}
     */
    @RequiresPermissions("edit${entity}")
    @RequestMapping("/edit/{id}")
    public  String edit(@PathVariable String id,Model model){
            ${entity} entity = service.selectById(id);

            model.addAttribute("entity",entity);
            return "#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}/edit";
    }
    /**
     * 执行编辑
     */
    @RequiresPermissions("edit${entity}")
    @RequestMapping("/doEdit")
    @ResponseBody
    @Log("编辑$!{table.comment}")
    public  Rest doEdit(@Valid ${entity} entity,BindingResult result){
        if(result.hasErrors()){
            for (ObjectError error : result.getAllErrors()) {
                return Rest.failure(error.getDefaultMessage());
            }
        }
        service.updateById(entity);
        return Rest.ok();
    }

}
